---
- name: Run kubeadm init on first master
  ansible.builtin.command:
    cmd: >
      kubeadm init            
      --control-plane-endpoint={{ control_plane_endpoint | default(groups['prod_control_plane'][0]) }}:6443
      --pod-network-cidr={{ pod_network_cidr }}
      --cri-socket=unix:///run/containerd/containerd.sock
      --skip-phases=addon/kube-proxy
  register: kubeadm_init_result
  changed_when: false
  when: inventory_hostname == groups['prod_control_plane'][0]

- name: Upload certificates and capture key
  ansible.builtin.command:
    cmd: kubeadm init phase upload-certs --upload-certs
  register: cert_key
  changed_when: false
  when: inventory_hostname == groups['prod_control_plane'][0]

- name: Extract certificate key
  ansible.builtin.set_fact:
    certificate_key: "{{ cert_key.stdout_lines | select('match', '^[a-f0-9]{64}$') | list | first }}"
  when: inventory_hostname == groups['prod_control_plane'][0]

- name: Create control-plane join command
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command --certificate-key {{ certificate_key }}
  register: cp_join_cmd
  changed_when: false
  when: inventory_hostname == groups['prod_control_plane'][0] and cert_key is succeeded

- name: Create worker join command
  ansible.builtin.command:
    cmd: kubeadm token create --print-join-command
  register: worker_join_cmd
  changed_when: false
  when: inventory_hostname == groups['prod_control_plane'][0] and kubeadm_init_result is succeeded